
--8
CREATE OR REPLACE TRIGGER UPDATE_ITEM_UNITS AFTER INSERT ON BILL_DETAILS
FOR EACH ROW
BEGIN
    UPDATE ITEMS IT SET UNITS_AVAILABLE = UNITS_AVAILABLE - 1 WHERE IT.ITEM_ID = :NEW.ITEM_ID;
END;


--9
CREATE OR REPLACE PROCEDURE INCREASE_CURR_PRICE_ITEMS AS
	NEW_CURRENT_PRICE ITEMS.PRICE%TYPE;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Start execution...');		
  
	FOR ITEM IN (SELECT IT.ITEM_ID, CC.DESCRIPTION, IT.PRICE, CC.COST_CENTER_ID FROM ITEMS IT
                  JOIN COST_CENTERS CC 
                  ON IT.COST_CENTER_ID = CC.COST_CENTER_ID
                  WHERE CC.COST_CENTER_ID IN (100, 110, 125))
	LOOP
		IF(ITEM.DESCRIPTION IN ('Room '||chr(38)||' Board')) THEN
        NEW_CURRENT_PRICE := ITEM.PRICE * 1.02; --EQ 0.02
			ELSE IF(ITEM.DESCRIPTION IN ('Laboratory')) THEN
          NEW_CURRENT_PRICE := ITEM.PRICE * 1.035; --EQ 0.03
				ELSE
					NEW_CURRENT_PRICE := ITEM.PRICE * 1.04; --EQ 0.05
			END IF;
		END IF;
        
        DBMS_OUTPUT.PUT_LINE('EL VALOR ANTERIOR ES: ' ||ITEM.PRICE|| ' Y EL ACTUAL ES: ' ||NEW_CURRENT_PRICE);
	
		UPDATE ITEMS IT SET PRICE = NEW_CURRENT_PRICE WHERE IT.ITEM_ID = ITEM.ITEM_ID;
	END LOOP;
	
	DBMS_OUTPUT.PUT_LINE('ACTUALIZACIÃ“N EXITOSA');		
END;

EXECUTE INCREASE_CURR_PRICE_ITEMS;
